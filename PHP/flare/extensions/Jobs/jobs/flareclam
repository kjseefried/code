#!/usr/bin/php

<?php
/**
* @package Flare
* @author Tim Rupp <tarupp01@indianatech.net>
* @copyright GPL
*/

/**
* Copyright (C) 2004-2005 Indiana Tech Open Source Committee
* Please direct all questions and comments to TARupp01@indianatech.net
*
* This program is free software; you can redistribute it and/or modify it under the terms of
* the GNU General Public License as published by the Free Software Foundation; either version
* 2 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
* without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
* See the GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License along with this program;
* if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
* MA 02111-1307, USA.
*/

$fh = fopen("/tmp/flareclam.lock", "w+");

define_syslog_variables();

if ($debug)
    syslog(LOG_NOTICE, "Trying to acquire lock on flareclam.lock");

if (!flock($fh, LOCK_EX)) {
    syslog(LOG_NOTICE, "flareclam.lock already locked. Exiting");
    exit();
}

require_once ("Console/Getopt.php");

$cg 		= new Console_Getopt();
$flaredir 	= '';
$infected	= array();
$summary	= array();
$xml		= '';

/**
* Allowed arguments include
*/
$allowedShortOptions 	= "";
$allowedLongOptions 	= array("flaredir=");

// read the command line
$args = $cg->readPHPArgv();

// get the options
$ret = $cg->getopt($args, $allowedShortOptions, $allowedLongOptions);

// check for errors and die with an error message if there was a problem
if (PEAR::isError($ret)) {
    die ("Error in command line: " . $ret->getMessage() . "\n");
    }

$opts = $ret[0];
if (sizeof($opts) > 0) {
    // if at least one option is present
    foreach ($opts as $o) {
        switch ($o[0]) {
            // handle the size option
            case '--flaredir':
                $flaredir = $o[1];
                break;
        }
    }
}

if ($flaredir == '')
    syslog(LOG_ERR, "You must specify a Flare installation to use files from.");
else {
    require_once($flaredir."/config-inc.php");
    require_once($flaredir."/db/mysql.php");
}

$db     = new DB(_DBUSER, _DBPWRD, _DBUSE, _DBSERVER, _DBPORT);

/**
* I only want to be running one scan at any given time because ClamAV
* takes an incredibly long time to scan a lot of files.
*/
$sql = array(
    'getscan' => "SELECT * FROM "._PREFIX."_clamscans WHERE status='P' ORDER BY scan_id ASC LIMIT 1",
    'update_status' => "UPDATE "._PREFIX."_clamscans SET status=':1' WHERE scan_id=':2'",
    'results' => "INSERT INTO "._PREFIX."_clamresults (`scan_id`,`results`) VALUES (':1',':2');"
);

$stmt1 = $db->prepare($sql['getscan']);
$stmt2 = $db->prepare($sql['update_status']);
$stmt3 = $db->prepare($sql['results']);

$stmt1->execute();

if ($stmt1->num_rows() == 0)
    exit;

$row 		= $stmt1->fetch_assoc();
$scan_id 	= $row['scan_id'];

$stmt2->execute('R', $scan_id);

exec($row['scan_cmd'],$output,$retval);

foreach ($output as $key => $val) {
    $val = trim($val);

    if ($val == '')
        continue;

    $tmp = explode(':', $val);

    $desc	= trim($tmp[0]);
    $value 	= trim($tmp[1]);

    if (strpos($value, "FOUND") !== false) {
        $infected[] = $desc;

        $tmp_val = explode(' ', $value);

        $virusname[] = $tmp_val[0];
    } else if ($desc == "Known viruses") {
        $summary['known_viruses'] = $value;
    } else if ($desc == "Engine version") {
        $summary['engine_version'] = $value;
    } else if ($desc == "Scanned directories") {
        $summary['scanned_directories'] = $value;
    } else if ($desc == "Scanned files") {
        $summary['scanned_files'] = $value;
    } else if ($desc == "Infected files") {
        $summary['infected_files'] = $value;
    } else if ($desc == "Data scanned") {
        $summary['data_scanned'] = $value;
    } else if ($desc == "Time") {
        $summary['time'] = $value;
    }
}

$xml = "<clamscan>";
$xml .= "<summary>";
$xml .= "<known_viruses>".$summary['known_viruses']."</known_viruses>";
$xml .= "<engine_version>".$summary['engine_version']."</engine_version>";
$xml .= "<scanned_directories>".$summary['scanned_directories']."</scanned_directories>";
$xml .= "<scanned_files>".$summary['scanned_files']."</scanned_files>";
$xml .= "<infected_files>".$summary['infected_files']."</infected_files>";
$xml .= "<data_scanned>".$summary['data_scanned']."</data_scanned>";
$xml .= "<time>".$summary['time']."</time>";
$xml .= "</summary>";

if (count($infected) > 0) {
    $xml .= "<filelist>";
    foreach ($infected as $key => $val) {
        $xml .= '<file path="'.$val.'">';
        $xml .= '<virus_name>'.$virusname[$key].'</virus_name>';
        $xml .= '</file>';
    }
    $xml .= "</filelist>";
}

$xml .= "</clamscan>";

$stmt3->execute($scan_id, $xml);
$stmt2->execute('F', $scan_id);

?>
